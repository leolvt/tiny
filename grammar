<programa> ::= <lista_comandos> "endp"

<lista_comandos> ::= <comando> ";"
<lista_comandos> ::= <comando> ";" <lista_comandos>

#<comando> ::= "writeStr" "(" <string> ")"
#<comando> ::= "writeVar" "(" <variavel> ")"
#<comando> ::= "writeln"
#<comando> ::= "read" "(" <variavel> ")"
#<comando> ::= <variavel> ":=" <exp_aritmetica>
<comando> ::= "for" <variavel> ":=" <exp_aritmetica> "to" <exp_aritmetica> "do"
				  <lista_comandos>
			  "end"	
<comando> ::= "while" <exp_booleana> "do"
			      <lista_comandos>
			  "end"
<comando> ::= "if" <exp_booleana> "then" <lista_comandos> "end"
<comando> ::= "if" <exp_booleana> "then" <lista_comandos> "else"
			      <lista_comandos> "end"

<exp_booleana> ::= <exp_or>

<exp_or> ::= <exp_or> or <exp_and>
<exp_or> ::= <exp_and>

<exp_and> ::=  <exp_and> and <exp_not>
<exp_and> ::=  <exp_not>

<exp_not> ::= not <exp_rel>
<exp_not> ::= <exp_rel>

<exp_rel> ::= <exp_aritmetica> "<" <exp_aritmetica>
<exp_rel> ::= <exp_aritmetica> ">" <exp_aritmetica>
<exp_rel> ::= <exp_aritmetica> "<=" <exp_aritmetica>
<exp_rel> ::= <exp_aritmetica> "<=" <exp_aritmetica>
<exp_rel> ::= <exp_aritmetica> "<>" <exp_aritmetica>
<exp_rel> ::= <exp_aritmetica> "=" <exp_aritmetica>
<exp_rel> ::= "(" <exp_booleana> ")"

# <exp_aritmetica> ::= <exp_aritmetica> "+" <exp_mul>
# <exp_aritmetica> ::= <exp_aritmetica> "-" <exp_mul> 
# <exp_aritmetica> ::= <exp_mul>

# <exp_mul> ::= <exp_mul> "*" <fator>
# <exp_mul> ::= <exp_mul> "/" <fator>
# <exp_mul> ::= <fator>

# <fator> ::= "(" <exp_aritmetica> ")"
# <fator> ::= "sqrt" "(" <exp_aritmetica> ")"
# <fator> ::= <num>
# <fator> ::= <variavel>

# <num> ::= ([0-9]+"."[0-9]*)|("."[0-9]+)
# <variavel> ::= [a-zA-z]

#<string> ::= ".*"

================================================================================

Precedencia Operadores:

0) ( ... )  sqrt
1) *  /   (Assoc. Esq)
2) +  -   (Assoc. Esq)
3) >  <  >=  <=  <> =
4) and    (Assoc. Esq)
5) or     (Assoc. Esq)
6) not

================================================================================
